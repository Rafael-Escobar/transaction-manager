// Code generated by mockery v2.36.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	domain "github.com/transaction-manager/internal/domain"
)

// OperationTypeRepository is an autogenerated mock type for the OperationTypeRepository type
type OperationTypeRepository struct {
	mock.Mock
}

// FindByID provides a mock function with given fields: id
func (_m *OperationTypeRepository) FindByID(id int) (*domain.OperationType, error) {
	ret := _m.Called(id)

	var r0 *domain.OperationType
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (*domain.OperationType, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int) *domain.OperationType); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.OperationType)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewOperationTypeRepository creates a new instance of OperationTypeRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOperationTypeRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *OperationTypeRepository {
	mock := &OperationTypeRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
